1. https://geonlee.tistory.com/9
2. https://devuryu.tistory.com/159

포트폴리오는 디자이너의 영원한 숙제 아닐까요?

오늘은 포트폴리오 제작에 도움이 될 만한 내용을 가져왔습니다.



*다음은 아래 글에 대한 번역입니다.

https://medium.com/doing-the-work/it-s-portfolio-season-here-s-8-thing-i-wish-i-d-known-while-des igning-mine-4869308540e7

Building your design portfolio? Here are 8 things I wish I’d known.
Looking back on my old portfolio and reflecting on lessons learned.

medium.com 






입사하고 나서 깨달은, 
포트폴리오에 필요한 8가지

2년 전, 저는 대학교의 마지막 학기를 다니고 있었고, 진정한 마지막 과제를 하고 있었습니다. 바로 포트폴리오를 준비하고 직장을 찾는 과제였죠. 저는 그래픽 디자인과를 졸업했으며, 풅타임 UX/UI 디자이너로 일하길 원했습니다.



노력은 결실을 맺어, 저는 Bloc에서 일하게 되었고, 정말 좋은 시간을 보낼 수 있었습니다.



하지만, 그만큼 힘든 시기였습니다. 저는 수많은 거절 메일을 받았고, 많은 시행착오를 겪어야 했습니다. 물론 지금은 매일 새로운 UX를 고민하고 디자인하는 일을 하고 있습니다. 덕분에 제가 취업하기 전에 만든 포트폴리오에서 찾을 수 있는 8가지 실수를 알아낼 수 있었습니다.







1. 사례 연구로서 작업물을 보여주세요




포트폴리오에 가능한 많은 사례 연구를 보여주세요. 



제가 대학생 시절에 취업을 준비할 때는 오로지 크고 아름다운 비주얼들로 포트폴리오를 채워나갔습니다. 그리고 무작정 포트폴리오를 회사들에 보냈고, 결과는 좋지 못했습니다.



저는 친구에게 도움을 청했습니다. 친구는 좋은 회사에 취직한 상태였고, 자신의 포트폴리오 몇 가지를 제게 보여줬습니다.



그 포트폴리오에는 사례 연구들이 가득했습니다. 다양하고 훌륭한 사례 연구들이 있었고, 동시에 디자인 과정, 성공과 실패, 마지막으로 디자인 설루션까지 담겨있었습니다.



저는 생각했습니다. “왜 나는 이런 사례 연구를 넣지 않은 걸까?”



저는 바로 사례 연구를 넣었고, 성공적이었습니다. 포트폴리오를 본 사람들의 반응은 확실히 긍정적으로 변했습니다.



아름다운 이미지들은 보기엔 확실이 좋습니다. 하지만 그것만으로는 당신이 문제 해결 능력이 있는지를 보여주지 못합니다. 과연 당신이 사용자들과 고용주들을 만족시킬 만한 해결책을 내놓을 수 있는지 설명할 수 있을까요? 포트폴리오에서 당신의 디자인 프로세스를 설명할 수 있나요? 가령 어떤 해결책을 시도했는지, 그 해결책이 통했는지 안 통했는지, 그리고 왜 그랬는지와 같은 내용을 말입니다. 문제 해결 능력을 보여줄 만한 프로토타입, 와이어 프레임, 다양한 시도가 담긴 화면들을 보여줄 수 있나요?



사례 연구를 보여주고, 당신이 문제를 해결할 수 있다는 걸 증명하세요. 회사에서 분명 긍정적으로 평가할 것입니다.









2. 포트폴리오에 담길 내용을 신중히 결정하세요.




당신의 포트폴리오가 전문적이어야 한다고 생각하시나요? 아니면 보편적이어야 한다고 생각하시나요? 이런 고민은 학생 입장에서 매우 어려운 고민입니다. 어떤 사람들은 포트폴리오를 다방면으로 준비하라고 말합니다 : 다양한 작업물을 통해서 말이죠 - 패키지 디자인, 편집 디자인, 광고, 그리고 웹까지 말입니다. 또 다른 사람들은 전문화하라고 말합니다. 모바일 앱을 좋아하시나요? 그리고 회사에서도 모바일 앱을 디자인하길 원하시나요? 그렇다면 포트폴리오도 모바일 앱으로 채우라는 뜻입니다.



만약 당신이 어떤 일을 할지 계속 찾는 중이라면, 아마 뭘 하고 싶은지 정확히 모르는 상태일 겁니다. 이런 상태라면, 다양한 분야의 작업을 보여주면 좋다고 생각합니다. 하지만 모바일 앱 디자인처럼, 만약 당신이 하고 싶은 분야가 확실하다면, 포트폴리오를 모바일 쪽으로 전문화시키고 또 전문화시키세요. 당신의 포트폴리오의 대부분은 모바일 결과물로 채워져야 할 겁니다.



제 사례를 예로 들자면, 저는 처음에는 UI 디자인이 하고 싶었고, 해당 포지션에 지원했습니다. 제 포트폴리오는 웹과 모바일 인터페이스 디자인으로 채워졌습니다. 하지만 여기 비밀이 있습니다. 사실 제 포트폴리어 전부가 웹과 모바일은 아니었고, 절반 정도는 편집 디자인에 해당했습니다. 하지만 전 그쪽에는 관심이 없었고, 해당 부분을 제외시켰습니다. 그리고, 저는 직장을 얻을 수 있었습니다.









3. 문제가 있더라도, 실제 결과물을 보여주세요.




저는 대학생 시절, 좋은 인턴쉽 경험을 할 수 있었습니다. 좋은 팀에서 훌륭한 디자인을 할 수 있었습니다. 하지만 얼마 지나지 않아 인턴쉽 팀은 해체되어 프로젝트는 중지되었습니다.



끝이 좋지 못했으나, 결과물 자체는 매우 좋았습니다. 이런 경우는 포트폴리오에 넣어야 할까요? 만약 넣는다면, 이 사실을 회사에 알려야 할 텐데 말이죠.



저는 포트폴리오에 넣었습니다.



그리고 어색한 상황이 연출되었습니다. 저는 면접 때 실패한 그 프로젝트를 보여줬습니다. 하지만 오히려 실패한 사실을 밝히는 것이 긍정적으로 받아들여졌습니다. 저는 솔직하게 프로젝트가 잘 진행된 점과 안 좋게 끝난 사실을 밝혔습니다. 그리고 더 잘 끝날 수도 있었다고도 말했습니다. 결과적으로 저는 어떤 식으로 노력했고, 뭘 배웠는지를 설명할 수 있었습니다. 그리고 동시에 당시 같이 일했던 팀원들과의 긍정적인 관계에 대해서도 이야기할 수 있었습니다.



면접에서는, 과연 당신이 사람들과 잘 어울려 일을 할 수 있는지에 대해서 알기 힘듭니다. 당신과 직접 일을 하기 전까지는 말이죠. 그렇기 때문에, 당신이 다른 사람들과 일한 내용을 적극적으로 보여주세요. 흔히 말하는 실무 경험이 당신의 성품을 증명해줍니다 - 당신이 팀에서 잘 적응할 수 있고, 위기 상황에서 어떻게 행동할 수 있는지를 말입니다. 만약 프로젝트가 성공적이지 못했더라도, 좋았던 점을 말해주세요. 결과가 좋지 못하더라도, 결과를 냉정하게 바라볼 수 있기에 상대방에게 믿음을 줄 수 있을 겁니다.









4. 양보단 질.




포트폴리오 1번 : 타이포그래피 포스터 디자인, 제품을 위한 광고 디자인, Reddit 리디자인

포트폴리오 2번 : Craigslist 리디자인, 가상 모바일 앱 디자인, 가상 광고 디자인

포트폴리오 3번 : 제품을 위한 광고디자인, Facebook 리디자인, 콘서트 포스터



수많은 포트폴리오를 봐도, 체계를 찾기는 어렵습니다.



확실히 하겠습니다. 첫 번째 포트폴리오에 있는 내용들은 물론 멋져 보이긴 합니다. 하지만 당신이 독자적으로 일할 수 있으며, 문제를 해결할 수 있는지를 보여주지는 못합니다. 문제를 해결한 사례가 들어있는 작업물이 포트폴리오에 들어가도록 명심하세요.









5. 결과에 대해 이야기하세요.




제가 인턴쉽을 위해 준비하던 때였습니다.



회사에 지원하기 위해 디자인 포트폴리오를 만들었고, 면접관에게 결과물에 대해 설명하고 있었습니다. 당시 저는 매우 빠르게 디자인했을 뿐만 아니라, 다양한 기능을 담은 와이어 프레임까지 보여주며 자신감 넘치게 발표를 마쳤습니다.



그러자 면접관은 저에게 물었습니다. “그래서 이 디자인의 최종 목적이 무엇인가요?”



저는 그 순간 얼어붙었고, 인턴쉽에도 떨어졌습니다.



저는 멋지고, 흥미 있고, 획기적인 디자인 작업들을 보는 것을 좋아합니다. 종종 영감을 얻기 위해 몇 시간 동안 다양한 웹사이트들을 돌아다니곤 합니다. 하지만 결국 이런 내용들은 사용자 경험을 직접적으로 개선시키거나, 비즈니스의 목표를 달성시키거나 하는 결과를 만들어내지는 못합니다. 결국에는 장식적인 기교에 그치고 말죠.



때문에 우리는 결과에 대해 이야기할 줄 알아야 합니다. 가능하다면 실제 데이터를 가져오세요. 그러나 그럴 수 없는 상황이라면, 더더욱 학생이라면 그러기 힘들 것입니다, 여러분의 사용자들에게 디자인에 대한 의견을 받아내세요. 언제나 프로젝트의 시작과 끝은 목표와 결과에 있음을 명심하길 바랍니다.









6. 포트폴리오를 살펴보기 쉽게 만드세요.




오늘만 해도 저는 몇 가지 사용자 인터뷰를 진행하고, 미팅을 했으며, 스티커를 디자인하고, UI 업데이트와, 몇 가지 새로운 기능의 콘셉트를 프로토타입으로 제작하고, 그리고 20개의 입사 지원서를 살펴봤습니다.



지금부터 빠르게 좋은 포트폴리오와 나쁜 포트폴리오를 가려보도록 하죠.



저는 - 최대로 잡더라도 - 포트폴리오 당 2분의 시간이 있습니다.



저는 신기하면서 아름답고 혁신적인 포트폴리오를 봤습니다. 흥미로운 레이아웃으로 실험적인 결과물을 뽑아내, 굉장한 웹 사이트를 만들어낸 디자이너의 포트폴리오였습니다. 하지만 거기서 길을 잃는 순간 - 즉, 사이트를 탐색하기 어려워진다면, 결과는 절망적일 것입니다.



명심하세요. 포트폴리오는 빠르고 쉽게 살펴볼 수 있어야 합니다. 그리고 모바일 환경에서 쉽게 볼 수 있도록 만들어주세요! 당신이 포트폴리오 작업물에서 고민한 만큼 사용자의 편의성을 포트폴리오 자체에도 고민하지 않는다면, 그 포트폴리오를 보는 사람들은 당신의 능력을 의심할 것입니다.



그리고 네 - 포트폴리오를 온라인에서 볼 수 있게 만들어야겠죠.









7. 조사하고, 신중하게 작성하세요.




저는 훌륭한 입사 지원서를 받았습니다.



진중하고, 목표가 뚜렷했습니다 - 그녀는 자신이 교육에 열망이 있고, 우리의 목적에 뜻을 같이 하며, 동시에 유머감각까지 갖추고 있었습니다.



저는 바로 다음날 면접을 제안했습니다. 그리고 그녀는 우리 회사에 입사했습니다.



회사에서는 하루에도 수백 건의 입사지원서를 받습니다. 대부분은 "안녕하세요, 이번에 어디에 입사하게 된 누구누구..."로 시작하여 장황한 연설을 시작하여, "이상으로 지금까지 저의 경험을 이야기..."로 마무리하곤 합니다.



이런 건 좋지 않습니다. 당신의 열정을 보여주세요. 그게 일반적이고 형식적인 지원서보다 100배는 좋습니다. 당신이 지금껏 직면했던 문제들에 대해 이야기하세요. 당신이 회사 생활에 얼마나 잘 알고 있고, 얼마나 잘 적응할 수 있는지를 말하세요. 그리고 당신이 얼마나 잘하는지, 잘할 수 있는지를 말하세요.



수많은 지원 서중에 분명 눈에 들어올 겁니다.









8. 열정을 노출하세요.




제가 Bloc과의 첫 면접을 진행할 때입니다. 저는 10분 동안이나 제 스스로 얼마나 디자인에 대해 공부했는지, 스스로 공부하는 즐거움에 대해서, 동시에 스스로 공부하면서 느꼈던 어려움에 대해서, 그리고 회사에 들어가야겠다는 필요성에 대해서, 그리고 지금 배우려는 새로운 툴에 대해서 떠들어 댔습니다. 시간이 가는 줄도 모르고, 저는 말을 끝마치고 제가 몇 분 동안이나 말을 했는지도 모를 정도였습니다.



네, 이게 열정입니다.



디자인 커뮤니티는 변화하고 성장합니다. 당신이 얼마나 이 산업과 회사에 열정적인지 알려주세요. 그리고 이런 건 아주 좋은 인상을 줄 것입니다.



당신이 어디에 꽂혀있는지 말하세요. 커뮤니티에 소속되어 소통하세요. 링크를 공유하고 토론하고, 관심분야에 대해 글도 써보세요. 당신이 아직 배우는 입장이더라도, 행동하는 게 중요합니다.



당신의 열정이 빛나도록 내버려두세요!

==============================================

[포트폴리오・이력서] 개발자의 포트폴리오・이력서 작성법, 면접을 잘 보는 법
heejeong Kwon 04 May 2018
개발자 포트폴리오, 개발자 이력서는 어떻게 작성해야 할까?, 면접은 어떻게 잘 볼 수 있을까?
Session
개발자의 이력서 작성하는 법
개발자의 포트폴리오 만드는 법
면접을 잘 보는 법
들어가기 전
상대방이 뭐에 대해 관심이 있을지 생각해봐야 한다.

원래는 질문이 좋아야 좋은 답이 나오기 때문에 회사에서 좋은 질문을 해야하는 것이 맞다.
하지만, 이력서의 질문들은 좋지 않은 질문들이 많다.
따라서! 질문이 어떻든 극복해야한다. 우문현답을 내야한다. 자신이 효과적으로 전달 해야 한다.
개발자의 이력서 작성하는 법


1. 사용 언어 작성 시
보는 사람 입장에서 기준이 명확해야 좋다.
skill 부분에 에디터나 IDE를 쓰지 않는다.
Word, Excel, PhotoShop… 쓰지 않는다.
EX) c++을 주력 언어로 사용하는 사람의 경우
프로젝트를 몇 개 진행해봤다.
STL를 이용해서 뭘 했다.
Socket (IOCP)
multi thread 프로그래밍 (1000대 정도)
2. 인성 작성 부분
기본적으로 보는 것은 ‘인간이 됐나’와 ‘열정과 성의’를 본다.
이력서를 한 명이 보고 결정하는 경우는 적다.
대부분 회사의 경우 인사팀에서 먼저 이력서를 확인하고 거른다.
기술적인 것을 검토하기 어렵기 때문에 기술보다 인성을 먼저 본다.
열정과 성의.
천재보다는 성실한 사람을 뽑겠다는 회사가 많다.
즉, 이력서에 성의가 없으면 탈락. 아래와 같은 이력서들은 빠르게 제낀다.
포트폴리오가 없는 경우
대부분을 한 줄로만 대답한 경우
3. 형식 조언
정리, 요약하라.
이력서 형식은 Editor에 따라 다르다.
요약 해서 작성한다.
EX) 1.2.3.
주저리주저리만 적어 놓으면 읽기가 싫어진다.
중요 포인트에 굵기 표시를 한다.
중요 포인트를 보고 흥미로워야 한다.
그렇다면 어떤 것이 흥미로울까? => 기술적인 부분!
4. 내용 조언
너무 솔직할 필요는 없다.
함정 질문에 빠지지 마라.
Q) 장단점?
EX) 저는 게으르고, 성격적으로 장애가 있다.
왜 써..
걸러내기 위해서 함정을 판다. 걸러지면 안된다!
지루해지면 안된다.
문장 자체 뿐만 아니라 본인이 인상 깊었던 이야기가 노잼이면 짜증난다.
Q) 당신에게 있어서 가장 인상깊었던 것은?
굉장히 개인적인 자신의 인생경험 이야기들은 남들에게는 진짜 재미가 없다.
Q) 존경하는 개발자?
EX) 빌게이츠 X (유명한 사람들 쓰지 마라.)
EX) 스티브잡스 X (개발자를 써야 되는 건 당연하다. 개발자가 아닌 사람은 쓰지 마라.)
EX) 우리학교 선배 X (너무 모를 만한 사람 쓰지 마라.)
별로 존경하지 않지만 그래도 호불호가 갈리지 않을 사람을 찾아서 써라.
근거가 있고 진지하게, 관심이 있어 보이게 써라.
언어적으로나 프레임워크를 개발한 사람.
A) 데니스 리치(C 언어), 켄트 벡(익스트림 프로그래밍 창시자)
정치적, 종교적인 거를 절대 드러내지 마라.
5. 기술 작성 부분
기술적으로 유혹하자.
기술적인 포인트를 써라.
너무 진지하게만 작성하려고 하지 말고, 자신이 읽어보고 그 포인트들이 흥미로운지 재미가 있는지 판단하라.
자신이 했던 것 위주의 프로젝트 내용을 요약해서 작성하라.
EX1) Java, Spring은 별도로 둔다.
언어: Java 8 (버전도)
Java 8을 이용한 asynchronous network programming
프레임워크: Spring
프로젝트:
Spring을 이용하여 ~~ 상용 프로그램을 만들었다.
EX2) Python, Django은 별도로 둔다.
언어: Python3 (버전도)
프레임워크: Django
프로젝트: “협업 웹 메신저”
Django를 이용하여 인증서버, 채팅서버를 구현했다.
이 프로젝트에서 기술적으로 어려웠던 부분, 해결한 부분
프로젝트 부분이 있으면 굉장히 좋다.
학교 공부한 것이 아니라 프로젝트로 한 것이 중요하다.
어떤 프레임워크나 어떤 언어를 이용하여 프로젝트를 몇 개 해봤다.
만약, 프레임워크를 썼다 뿐만 아니라 뜯어 봤다고 하면 진짜 플러스 플러스
공부했던 중요 책들을 소개해서 적는 것도 매우 좋다.
이거까지 봤어? 이런 느낌이 든다.
개발분야는 기술적인 것만 관심이 있다.
유혹될 수 있을 만한 굉장히 개발적인 이야기를 적어라.
EX) 동아리 회장으로서 뭘 이끌었고…
관심 없다…
TIP
사실, 인턴이나 취업을 해서 최대한 빨리 업계에서 배우는 것이 성장률이 빠르고 이력에 작성하기 좋다.

개발자의 포트폴리오 만드는 법


1. 내용 조언
자신이 한 부분을 어필하자!
설명이 없으면 안된다.
자랑만 하는 것은 의미가 없다.
팀 프로젝트를 조심하라.
이런 프로젝트를 했다. 끝.
자기가 얼마나 했는지가 안나와 있다.
자신이 한 부분을 어필해야한다.
해당 프로젝트의!! github 주소를 적어야 한다.
맨 처음에 세 줄 요약이 필요하다!
강조하는 두 페이지
1page:
자신의 기술 스펙 요약
이력서 공간에 쓰지 못했던 자세한 기술 요약
c++ 언어는 학교에서 얼마나 공부했고
개인적인 프로젝트는 얼마나 했고
팀 프로젝트는 얼마나 했고
STL과 network programming은 어느 정도 했고
Boost 라이브러리는 얼마나 보고 있고
개발 관련 알바/외주는 어떤 것을 해봤다.
등등을 굵기 조절해서 요약하자!
2page:
프로젝트 요약
어떤 프로젝트인지 한 줄 요약
해당 프로젝트에서의 자신의 역할
자신이 기술적으로 무엇을 얼만큼 어디까지 했는지
자신이 썼던 프레임워크
2. 형식 조언
디자인을 잘하자!
디자인을 잘해야 한다.
감각이 없어도 괜찮은 템플릿을 골라라.
디자인이 나쁘면 보기가 싫다.
깔끔한 느낌이 제일 좋다.
최대한 pdf로 보내라.
ppt라면 깔려 있을 것이라고 예상되는 폰트를 사용한다.
‘한글과컴퓨터 한글’은 사용하지 않는 것이 좋다.
MAC에서 보내는 것도 주의하자!
개발적이지 않은 필요 없는 자료는 넣지마라.
누가봐도 문제 없도록 표준적인 내용을 써라.
개그가 통할 수도 있고 통하지 않을 수도 있다.
오바스럽지 않게 작성한다.
면접을 잘 보는 법

1. 보는 사람마다 다 다르다.
보는 사람마다 다 다르기 때문에 확실한 답이 없다. 그렇지만..!
창의력과 천재력??
EX) 마이크로소프트 스타일
후지산을 옮기려면 어떻게 해야하나?
서울에 맨홀뚜껑이 몇 개가 있을까?
운전하면서 옆자리에 앉을 수 있는 아저씨, 할머니, 이상형 여자 누구를 태울 것인가?
보는 사람마다 다 다르기 때문에 확실한 답이 없다.
경력자가 아닌 이상은 실력이 거의 비슷하다.
하지만 대부분은 개발을 진짜 사랑하는지를 본다. (발전 가능성이 있다고 생각하기 때문)
2. 반드시 개발 부분에 대한 질문을 한다.
그럼에도 불구하고 면접에서 중요한 것은 개발적인 것을 물어본다.
기본기
거의 대부분이 물어본다. 하지만 기대치가 낮다. 적당한 수준에서 대답을 하면 된다.
EX) 동기 프로그램 / 메모리 / 스레드 / queue의 구조 / IOCP / ICP
EX) 운영체제 / 자료구조 / DB / 네트워크 프로그래밍 (Low한 쪽으로) / Struct -> OOP
IT에서의 바뀌지 않는 기초들은 스스로 공부를 하면서 닦아 나가야 한다.
대신 면접 대비 문제를 통해 스피드있게 공부하여 면접을 대비할 수 있다.
개발자로 오래가고 성공하려면 굉장히 중요한 부분
응용 범위
중요하다.
이력서에서 적은 내용을 바탕으로 질문을 한다.
질문할 수 있는 소재가 굉장히 다양하다.
EX) 프레임워크
면접관을 유도하자!
면접관만 유도를 하는 것이 아니다. 면접을 당하는 사람도 유도를 해야한다.
기본기에 대한 얘기를 하면서 응용 범위로 자연스럽게 넘어갈 수 있도록 유도를 하자!
해당 기본기 질문에 대한 답을 조금만 하면서 그것을 적용했던 프로젝트로 유도를 한다면 면접관도 자연스럽게 넘어온다.
EX) 이런 프로젝트를 했을 때 이런 식으로 사용했었다. ~
유도심문에 넘어가지 마라!
Q) 지금 IT 업계에서 지원자가 별로 없고 많이들 떠나는 추세여서 굉장히 힘든 상태인데 혹시 언제까지 개발할 생각인가? 혹시 다른 것도 관심이 있는 것이 있나?
A1) ‘5 ~ 10년 정도 개발하고 제가 진짜로 할 거를 찾을 것입니다.’라고 한다면… 뽑는 사람쪽에선 ‘아 얘는 금방 나갈 친구구나!’라고 생각한다.
A2) ‘저는 무덤갈 때까지 키보드를 잡고 있을 겁니다.’라고 한다면… ‘개발에 열정은 있는 친구구나!’라고 생각한다.
즉, 오버는 하지 말고 개발에 열정있는 모습을 보여주는 것이 좋다.
적당히 타협하려는 모습은 안좋다.
너무 거만한 모습을 보이지 마라!
개발자 중에는 거만한 사람이 많다.
그런데, 그런 사람들이 거만한 친구들을 진짜 싫어한다.
그러므로 면접에서의 거만한 모습은 주의해야한다.
발랄해 보이자!
되게 어두워 보이는 사람을 좋아하지 않는다. 발랄해 보여야 한다.
긴장하지 말고!!!
tension을 높여라. - 면접 전에 롤 한 판 지고 면접 봐라.
프로젝트 경험을 통해 자신만의 응용범위가 생겼다면 여러 명이 함께들어가는 단체 면접이 훨씬 유리하다.
why? 우리는 기본기 질문보다는 응용 범위 질문이 많이 나오면 좋을 것이니까
자신의 응용 범위를 통해 다른 사람들과 차별화되는 자신만의 장점을 활용한다.
EX) Jenkins / nGrinder / Websocket
감사 인사
‘스마일게이트 서버개발캠프’의 ‘계동원’캠프장님의 조언에 진심으로 감사드립니다.!

References
http://woowabros.github.io/experience/2017/07/17/resume.html
http://hl1itj.tistory.com/90
https://www.slideshare.net/MinsukLee/ss-81785828